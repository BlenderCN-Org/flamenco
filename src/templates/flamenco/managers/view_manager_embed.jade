.flamenco-box.manager
	form#item_form(onsubmit="return editManager()")
		| {% if can_edit %}
		.input-group
			input.item-name.input-transparent(
				name="name",
				type="text",
				placeholder="Manager's name",
				value="{{ manager.name | hide_none }}")
			button.copy-to-clipboard.btn.item-id(
				style="margin-left: auto",
				name="Copy to Clipboard",
				type="button",
				data-clipboard-text="{{ manager._id }}",
				title="Copy ID to clipboard")
				| ID
		.input-group
			textarea.item-description.input-transparent(
				name="description",
				type="text",
				rows=1,
				placeholder="Manager's description") {{ manager.description | hide_none }}

		.input-group
			button#item-save.btn.btn-default.btn-block(type='submit')
				i.pi-check
				| Save Manager
		| {% else %}
		p.item-name {{ manager.name | hide_none }}
		| {% if manager.description %}
		p.item-description {{ manager.description | hide_none }}
		| {% endif %}
		| {% endif %}

.flamenco-box.manager
	h4 Properties
	.table.item-properties
		.table-body
			.table-row.properties-last-updated
				.table-cell Last Updated
				.table-cell(title='Unable to edit, set by Manager')
					| {{ manager._updated | hide_none | pretty_date_time }}
			.table-row.properties-url
				.table-cell URL
				.table-cell(title='Unable to edit, set by Manager')
					| {% if manager.url %}
					a(href="{{ manager.url }}") {{ manager.url }}
					| {% else %}
					| None yet, will be set by the Manager
					| {% endif %}

	| {% if manager.variables %}
	h4 Variables
	.table.item-properties
		.table-body(title='Unable to edit, set by Manager')
			| {% for var_key, var_values in manager.variables.to_dict().items()  %}
			.table-row.properties-variables
				.table-cell
					| {{ var_key }}
				.table-cell
					pre.
						{{ var_values | pprint}}
			| {% endfor %}
	| {% endif %}
	.action-result-panel

.flamenco-box.manager#manager-projects-list
	h4 Projects linked to this Manager

	.table.item-properties
		.table-body
			| {% for project in linked_projects._items %}
			.table-row.properties-url
				.table-cell
					i.pi-blender-cloud
				.table-cell
					a(href="{{ url_for('flamenco.jobs.perproject.index', project_url=project.url) }}")
						| {{ project.name }}
				.table-cell
					a(href='javascript:unlinkProject("{{ project._id }}")')
						i.pi-trash
			| {% endfor %}

	.pull-right
		| {% if available_projects %}
		select#link_project_select
			| {% for project in available_projects %}
			option(value="{{ project._id }}") {{ project.name }}
			| {% endfor %}
		button.btn.btn-success(onclick="linkProject()")
			i.pi-link
			| Link project
		| {% elif linked_projects %}
		button.btn.btn-default(disabled)
			| All available projects are linked already.
		| {% else %}
		button.btn.btn-default(disabled)
			| You have no projects set up for Flamenco.
		| {% endif %}
	.clearfix

| {% if can_edit %}
.flamenco-box.manager#manager-projects-list
	h4 Authentication token

	p
		i.pi-lock
		a#show_auth_token(href='javascript:void(0);')
			// When changing the button text, also update _displayAuthToken().
			| click to show authentication token

	button.btn.btn-block#gen-auth-token(onclick="generateNewAuthToken()")
		i.pi-link
		// When changing the button text, also update generateNewAuthToken().
		| Generate new token

| {% endif %}

#item-view-feed
	| {% if config.DEBUG %}
	.debug-info
		a.debug-info-toggle(role='button',
			data-toggle='collapse',
			href='#debug-content-manager',
			aria-expanded='false',
			aria-controls='debug-content-manager')
			i.pi-info
			| Debug Info
		#debug-content-manager.collapse
			pre.
				{{ manager.to_dict() | pprint }}
	| {% endif %}

| {% block footer_scripts %}
script.
	var clipboard = null;
	function createClipboard() {
		if (clipboard != null) {
			clipboard.destroy();
		}

		clipboard = new Clipboard('.copy-to-clipboard');

		clipboard.on('success', function(e) {
			$(e.trigger).flashOnce();
			statusBarSet('info', 'Copied to clipboard', 'pi-check');
		});
	}
	createClipboard();

	function unlinkProject(project_id) {
		console.log("Unlinking project ", project_id, " from Manager ", "{{ manager._id }}")
		patchManager({
			op: 'remove-from-project',
			project: project_id,
		})
		.fail(function(err) {
			var $p = xhrErrorResponseElement(err, 'Error unlinking project: ');
			$('.action-result-panel').html($p);
		})
		;
	}

	function linkProject() {
		var project_id = $('#link_project_select').val();
		patchManager({
			op: 'assign-to-project',
			project: project_id,
		})
		.fail(function(err) {
			var $p = xhrErrorResponseElement(err, 'Error linking project: ');
			$('.action-result-panel').html($p);
		})
		;
	}

	function editManager() {
		var $form = $('#item_form');
		var new_name = $form.find('*[name="name"]').val();

		patchManager({
			op: 'edit-from-web',
			name: new_name,
			description: $form.find('*[name="description"]').val(),
		})
		.done(function() {
			$('span.manager-name-{{ manager._id }}').text(new_name);
		})
		.fail(function(err) {
			var $p = xhrErrorResponseElement(err, 'Error editing Manager: ');
			$('.action-result-panel').html($p);
		})
		;

		return false;
	}

	function patchManager(patch) {
		$('.action-result-panel').html('');

		var promise = $.ajax({
			url: '/api/flamenco/managers/{{ manager._id }}',
			method: 'PATCH',
			contentType: 'application/json',
			data: JSON.stringify(patch),
		})
		.done(function() {
			item_open('{{ manager._id }}', 'manager', false);
		})
		.fail(function(err) {
			console.log('Error patching: ', err);
		})
		;
		
		return promise;
	}

	var auth_token_link = $('#show_auth_token');
	function _displayAuthToken(json_data) {
		function _hideAuthToken() {
			auth_token_link
				.text('click to show authentication token')
				.removeClass('copy-to-clipboard')
				.removeAttr('title')
				.removeAttr('data-clipboard-text')
				.click(showAuthToken)
			;
			$('#click_token_text').remove();
		}

		auth_token_link
			.text(json_data.token)
			.addClass('copy-to-clipboard')
			.attr('title', 'Click to copy to clipboard')
			.attr('data-clipboard-text', json_data.token)
			.off('click')
		;
		$('#click_token_text').remove();
		$('<p>')
			.attr('id', 'click_token_text')
			.text(
				'Click the token to copy to your clipboard, ' +
				'then paste it into your flamenco-manager.yml file.')
			.addClass('hint')
			.insertAfter(auth_token_link.parent())
		;
		createClipboard();
		window.setTimeout(_hideAuthToken, 20000);
	}

	function showAuthToken() {
		$('.action-result-panel').html('');

		$.post(
			'{{ url_for("flamenco.managers.manager_auth_token", manager_id=manager._id) }}',
			{csrf: '{{ csrf }}'}
		)
		.done(_displayAuthToken)
		.fail(function(err) {
			var $p = xhrErrorResponseElement(err, 'Error fetching auth token: ');
			$('.action-result-panel').html($p);
		})
		;
	}
	auth_token_link.click(showAuthToken);

	function generateNewAuthToken() {
		$('.action-result-panel').html('');
		var $btn = $('#gen-auth-token');

		function restoreButtonText() {
			window.setTimeout(function() {
				$btn.text('Generate new token');
			}, 3000);
		}

		if (!confirm('Are you sure you want to generate a new authentication token? ' +
				'This will invalidate any previously existing token.')) {
			$btn.text('Cancelled');
			restoreButtonText();
			return;
		}

		$btn.attr('disabled', 'disabled').text('Generating');

		$.post(
			'{{ url_for("flamenco.managers.generate_auth_token", manager_id=manager._id) }}',
			{csrf: '{{ csrf }}'}
		)
		.done(function(data) {
			$btn.removeAttr('disabled').text('Token generated');
			_displayAuthToken(data);
			restoreButtonText();
		})
		.fail(function(err) {
			var $p = xhrErrorResponseElement(err, 'Error generating auth token: ');
			$('.action-result-panel').html($p);
			restoreButtonText();
		})
		;
	}


| {% endblock %}
